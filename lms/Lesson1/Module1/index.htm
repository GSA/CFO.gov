<!DOCTYPE html><HTML>
<HEAD>
<TITLE>OMB Grant Management 101 Module 1</TITLE>
<script>

if(isFlashEnabled()) 
{ // document.write('Flash is installed (but may need to be enabled)');
} 
else { document.write('Flash is either not installed or disabled.  <a href="https://get.adobe.com/flashplayer/">Click here to enable flash.</a>'); }

function isFlashEnabled() 
{
    var flash = navigator.plugins.namedItem('Shockwave Flash');
    if (!flash) { return 0; } 
    else { return 1; }
}

</script>
<style>
iframe[seamless]{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 1050px;
    height: 850px;
    background-color: transparent;
    border: 0px none transparent;
    padding: 0px;
    overflow: hidden;
    visibilty: visible;
}
</style>
<SCRIPT TYPE="text/javascript" SRC="APIWrapper.js"></SCRIPT>

<SCRIPT TYPE="text/javascript">
var lmsconnection = false; //boolean variable to check for LMS connection
var currentBookmark = "Menu/menu.htm";
var pagesViewed = "|";
var ReturnToMenu = 0;
var audioOn=1;
var gda=new Array("","","","","","");

var LessonPageVisited=new Array("","","","","","","","","","","","","","","");
var LessonPageCompleted=new Array("","","","","","","","","","","","","","","");
var LessonBookmarks=new Array("","","","","","","","","","","","","","","");
var LessonCompletion=new Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
var popWin;
var ModulePageNumbers=[];
ModulePageNumbers.push("Lesson1/00000");
ModulePageNumbers.push("Lesson1/00010");
ModulePageNumbers.push("Lesson1/00100");
ModulePageNumbers.push("Lesson1/00200");
ModulePageNumbers.push("Lesson1/00300");
ModulePageNumbers.push("Lesson1/00400");
ModulePageNumbers.push("Lesson1/00500");
ModulePageNumbers.push("Lesson1/00600");
ModulePageNumbers.push("Lesson1/00700");
ModulePageNumbers.push("Lesson1/00800");
ModulePageNumbers.push("Lesson1/00900");
ModulePageNumbers.push("Lesson1/01000");
ModulePageNumbers.push("Lesson1/01100");
ModulePageNumbers.push("Lesson1/01200");
ModulePageNumbers.push("Lesson1/01300");
ModulePageNumbers.push("Lesson1/01400");
ModulePageNumbers.push("Lesson1/01500");
ModulePageNumbers.push("Lesson1/01600");
ModulePageNumbers.push("Lesson1/01700");
ModulePageNumbers.push("Lesson1/01800");
ModulePageNumbers.push("Lesson1/01900");
ModulePageNumbers.push("Lesson1/02000");
ModulePageNumbers.push("Lesson1/02100");
ModulePageNumbers.push("Lesson1/02110");
ModulePageNumbers.push("Lesson1/02200");
ModulePageNumbers.push("Lesson1/02300");
ModulePageNumbers.push("Lesson1/02400");
ModulePageNumbers.push("Lesson1/02500");
ModulePageNumbers.push("Lesson1/02600");
ModulePageNumbers.push("Lesson1/02610");
ModulePageNumbers.push("Lesson1/02700");
ModulePageNumbers.push("Lesson1/02800");
ModulePageNumbers.push("Lesson1/02810");
ModulePageNumbers.push("Lesson1/02820");
ModulePageNumbers.push("Lesson1/02830");
ModulePageNumbers.push("Lesson1/02900");
ModulePageNumbers.push("Lesson1/02910");
ModulePageNumbers.push("Lesson1/03000");
ModulePageNumbers.push("Lesson1/03010");
ModulePageNumbers.push("Lesson1/03100");
ModulePageNumbers.push("Lesson1/03200");
ModulePageNumbers.push("Lesson1/03300");
ModulePageNumbers.push("Lesson1/03310");
ModulePageNumbers.push("Lesson1/03400");
ModulePageNumbers.push("Lesson1/03500");
ModulePageNumbers.push("Lesson1/03800");
ModulePageNumbers.push("Lesson1/03900");
ModulePageNumbers.push("Lesson1/04120");
ModulePageNumbers.push("Lesson1/04200");
ModulePageNumbers.push("Lesson1/04410");
ModulePageNumbers.push("Lesson1/04500");
ModulePageNumbers.push("Lesson1/04610");
ModulePageNumbers.push("Lesson1/04700");
ModulePageNumbers.push("Lesson1/04910");
ModulePageNumbers.push("Lesson1/05000");
ModulePageNumbers.push("Lesson1/05110");
ModulePageNumbers.push("Lesson2/00000");
ModulePageNumbers.push("Lesson2/00100");
ModulePageNumbers.push("Lesson2/00200");
ModulePageNumbers.push("Lesson2/00300");
ModulePageNumbers.push("Lesson2/00400");
ModulePageNumbers.push("Lesson2/00500");
ModulePageNumbers.push("Lesson2/00600");
ModulePageNumbers.push("Lesson2/00700");
ModulePageNumbers.push("Lesson2/00800");
ModulePageNumbers.push("Lesson2/00900");
ModulePageNumbers.push("Lesson2/01000");
ModulePageNumbers.push("Lesson2/01100");
ModulePageNumbers.push("Lesson2/01200");
ModulePageNumbers.push("Lesson2/01300");
ModulePageNumbers.push("Lesson2/01400");
ModulePageNumbers.push("Lesson2/01500");

function pageOnLoad() {
/*
	if (!lmsconnection) {
		var result = doLMSInitialize();
		lmsconnection = result;
	}

	if(!currentBookmark){
		currentBookmark="Menu/menu.htm";
	}


	if (lmsconnection) {
		var status = doLMSGetValue("cmi.core.lesson_status");

		if (status == "not attempted" || status == "unknown") {
			// the student is attempting the lesson for the first time
			doLMSSetValue("cmi.core.lesson_status", "incomplete");
			doLMSCommit();
		} else {
			// restore previous session variables
			var c = doLMSGetValue("cmi.core.lesson_location");
			;
			if (c != "") {
				currentBookmark = c;
			}
			var p = doLMSGetValue("cmi.suspend_data");
			if(p!=""){
				var ta=p.split(":");
				var i=0;
				while(i<ta.length){
					LessonPageCompleted[i]=ta[i];
					i++;
				}
			}

			if (p != "") {
				gda[0] = p;
			}
			if (status == "completed"){
				currentBookmark = "Menu/menu.htm";
			}
		}
	}
	document.getElementById("courseframe").src = "dtm.htm";
*/
}



function washURL(s){
	return s;
}

function getPageNumber(lesson,page){
	var s;
	s="Lesson" + lesson + "/" + page;
	var num = ModulePageNumbers.indexOf(s);
	num+=2;
	return num;
}

function isPageVisited(lesson,page){
	var s;
	var i;
	s=LessonPageVisited[lesson-1];
	i=s.indexOf(page);
	if(i<0){
		return false;
	}
	else{
		return true;
	}
}

function isPageComplete(lesson,page){
	var s;
	var i;
	s=LessonPageCompleted[lesson-1];
	i=s.indexOf(page);

	if(i<0){
		return false;
	}
	else{
		return true;
	}
}

function isPageCompleted(lesson,page){
	var s;
	var i;
	s=LessonPageCompleted[lesson-1];
	i=s.indexOf(page);

	if(i<0){
		return false;
	}
	else{
		return true;
	}
}

function setBookmark(lesson,page){
}

function setVisited(lesson,page){
	var s;
	var i;

	s=LessonPageVisited[lesson-1];
	i=s.indexOf(page);
	if(i<0){
		if(s!=""){
			s+="|" + page;
		}
		else{
			s+=page;
		}
		LessonPageVisited[lesson-1]=s;
	}

}

function setCompleted(lesson,page){
	var s;
	var i;
	var tempstatestring;
	var w="";
		w+=window.location;
	SetBookmark("Lesson" + lesson + "/" + page + ".htm");
	s=LessonPageCompleted[lesson-1];

	i=s.indexOf(page);
	if(i<0){
		if(s!=""){
			s+="|" + page;
		}
		else{
			s+=page;
		}
		LessonPageCompleted[lesson-1]=s;
	}

	i=0;
	tempstatestring="";
	while(i<LessonPageCompleted.length){
		tempstatestring+=(LessonPageCompleted[i]);
		i++;
		if(i<LessonPageCompleted.length){
			tempstatestring+=":";
		}
	}
	if(lmsconnection){
			doLMSSetValue("cmi.suspend_data", tempstatestring);
			doLMSCommit();
	}


	//console.log(LessonPageCompleted[lesson-1]);


}

function setLessonStarted(lesson){
}

function setLessonCompleted(lesson){
}


/**************************************************************************************************************
Child window can call this function to set this lesson complete.  This should be an automatic call on the last
page of a SCO
**************************************************************************************************************/

function SetCompleteFromChild() {
	if (lmsconnection) {
		doLMSSetValue("cmi.core.lesson_status", "passed");
		doLMSCommit();

		//alert("1");
		try{
			opener.updateMe();
		}
		catch(err){
			//alert("no opener");
		}
	}
}

/**************************************************************************************************************
Child window can call this function to terminate the connection to the LMS and close the intermediate window.
This call should be invoked from the child on the quit button.
**************************************************************************************************************/
function QuitSCO() {
	doLMSFinish();
	lmsconnection = false;
}

function handleUnload(referee){
	if (lmsconnection) {
		doLMSFinish();
		lmsconnection = false;
	}
	if (referee == 0) {
		window.opener = self;
		self.close();
		//window.close();
	}
}

/**************************************************************************************************************
This function sets the current page as a bookmark to the LMS
**************************************************************************************************************/
function SetBookmark(pageURL){
	var b;
	var lc;
	var ok;
	b=pageURL;
	lc=b.toLowerCase();
	ok=lc.indexOf("ref") + lc.indexOf("menu") + lc.indexOf("resources");
	if(ok == -3){
		currentBookmark = washURL(pageURL);

		//alert("currentBookmark: " + currentBookmark);
		if (lmsconnection) {
			doLMSSetValue("cmi.core.lesson_location", currentBookmark);
			//doLMSSetValue("cmi.suspend_data", gda[0]);
			doLMSCommit();
		}

	}
}


/**************************************************************************************************************
This function sets the current completion string to the LMS
**************************************************************************************************************/
function SaveCompletionString() {
	if (lmsconnection) {
		doLMSSetValue("cmi.suspend_data", pagesViewed);
		doLMSCommit();
	}
}


/**************************************************************************************************************
Keystroke intercept functions for Refresh commands - we do not want users to be able to refresh this screen,
because the connection to Plateau must persist and should not be reinstantiated...note the keyDown() keyUp()
calls on the body of this frame page.
**************************************************************************************************************/

function cancelRefresh() {
  // keycode for F5 function
  if (window.event && window.event.keyCode == 116) {
  	//alert("Please do not try to refresh this window again!");
    window.event.keyCode = 8;
  }
  // keycode for backspace
  if (window.event && window.event.keyCode == 8) {
    // try to cancel the backspace
    window.event.cancelBubble = true;
    window.event.returnValue = false;
    return false;
  }
}

function keyDown() {
	if(window.event && window.event.keyCode == 17){
		ctrlstate=1;
		document.getElementById("c1").innerHTML=ctrlstate;
	}
	if (window.event && window.event.keyCode == 116){
		window.event.keyCode=0;
		window.event.cancelBubble=true;
		window.event.returnValue=false;
	}

	if (window.event && window.event.keyCode == 82 && ctrlstate == 1){
		window.event.keyCode = 0;
		window.event.cancelBubble = true;
		window.event.returnValue = false;
	}

}

function keyUp() {
	if (window.event && window.event.keyCode == 17){
		ctrlstate = 0;
	}
}


function confirmClose() {
	if (!ReturnToMenu)
		event.returnValue = "If you are viewing a lesson, this window must remain open.";
}


// function for checking if been there for pages where Next initially disabled
function setPageViewed(v) {
	//alert("setPageViewed(" + v + ")");
	if (pagesViewed.indexOf(v +"|") == -1) {
		pagesViewed += v + "|";
		SaveCompletionString();
	}
}

function closeWindow() {
	//window.opener = self;
	//self.close();
	top.close();
}
function resizeMe(){
	var browser=navigator.appName;
	var winht;
	var winwid;
	var mleft;
	var mtop;

	if(browser.indexOf("Microsoft")>-1){
		winwid=document.body.clientWidth;
		winht=document.body.clientHeight;
	}
	else{
		winwid=window.innerWidth;
		winht=window.innerHeight;
	}
	if(winwid>1000){
		mleft=(winwid-1000)/2;
	}
	else{
		mleft=0;
	}

	if(winht>800){
		mtop=(winht-800)/2;
	}

	else{
		mtop=0;
	}
	ProgLeft=(winwid/2)-202;

	document.getElementById("coursediv").style.left="" + mleft + "px";
	document.getElementById("coursediv").style.top="" + mtop + "px";


}

</SCRIPT>
</HEAD>


<BODY onLoad="pageOnLoad()">
<div id="coursediv" name="coursediv" style="position:absolute;top:0px;left:0px;width:1020px;height:820px;">
<iframe id="courseframe" src="Menu/menu.htm" seamless></iframe>
</div>

<script language="javascript">resizeMe();</script>

</BODY>
</HTML>
